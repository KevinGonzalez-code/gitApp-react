{"version":3,"sources":["componentes/AddCategory.js","helpers/getGits.js","componentes/GitGridItem.js","componentes/GitGrid.js","hooks/useFetchGifs.js","componentes/GitExpertApp.js","index.js"],"names":["AddCategory","categorias","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","find","categoria","cats","alert","type","placeholder","value","onChange","target","getGifs","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","images","downsized_medium","GitGridItem","title","className","src","alt","GitGrid","loading","state","setState","useEffect","setTimeout","getGits","then","imgs","useFetchGifs","toUpperCase","GitExpertApp","ReactDOM","render","document","getElementById"],"mappings":"iNAGaA,EAAc,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cAAoB,EAEtBC,mBAAS,IAFa,mBAEnDC,EAFmD,KAEvCC,EAFuC,KAyB1D,OACI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IANxBT,EAAWU,MAAK,SAAAC,GAAS,OAAIA,IAAcR,MAO9CF,GAAc,SAAAW,GAAI,OAAKT,GAAL,mBAAmBS,OACrCR,EAAc,KAEdS,MAAM,oDAMV,SACI,uBACIC,KAAK,OACLC,YAAY,0BACZC,MAAOb,EACPc,SA1Bc,SAACX,GACvBF,EAAcE,EAAEY,OAAOF,a,+BCShBG,EAhBK,uCAAG,WAAOR,GAAP,uBAAAS,EAAA,6DACbC,EADa,iDACoCC,UAAUX,GAD9C,+DAEKY,MAAMF,GAFX,cAEbG,EAFa,gBAGIA,EAAUC,OAHd,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRT,IAAG,UAAEQ,EAAIE,cAAN,aAAE,EAAYC,iBAAiBX,QARvB,kBAaZM,GAbY,4CAAH,sDCAPM,EAAc,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOb,EAAS,EAATA,IAEhC,OACI,qBAAKc,UAAU,6CAAf,SACI,qBAAKC,IAAKf,EAAKgB,IAAKH,OCDnBI,EAAU,SAAC,GAAmB,IAAjB3B,EAAgB,EAAhBA,UAAgB,ECFd,SAACA,GAAe,IAAD,EACbT,mBAAS,CAC/BwB,KAAM,GACNa,SAAS,IAH0B,mBAChCC,EADgC,KACzBC,EADyB,KAwBvC,OAlBAC,qBAAU,WAENC,YAAW,WAEPC,EAAQjC,GACHkC,MAAK,SAAAC,GAEFL,EAAS,CACLf,KAAMoB,EACNP,SAAS,SAItB,OAGJ,CAAC5B,IAEG6B,EDpB2BO,CAAapC,GAAjCoB,EAFwB,EAE9BL,KAAca,EAFgB,EAEhBA,QAGtB,OAEI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDxB,EAAUqC,gBAC5DT,GAAW,mBAAGJ,UAAU,mCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SAEQJ,EAAOH,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEOtBmB,EAtBM,WAAO,IAAD,EAEa/C,mBAAS,CAAC,WAFvB,mBAEhBF,EAFgB,KAEJC,EAFI,KAIvB,OACI,qCACI,kDACA,cAAC,EAAD,CAAaD,WAAYA,EAAYC,cAAeA,IACpD,uBAEQD,EAAW4B,KAAI,SAAAjB,GAAS,OACpB,cAAC,EAAD,CAEAA,UAAWA,GADNA,UCX7BuC,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.293f5761.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ categorias, setCategorias }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleValidacionCategoriaRepetida = () => {\r\n        return categorias.find(categoria => categoria === inputValue) ? true : false;\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2 && !handleValidacionCategoriaRepetida()) {\r\n            setCategorias(cats => [inputValue,...cats]);\r\n            setInputValue('');\r\n        } else {\r\n            alert('No se pueden agregar valores vacios o repetidos');\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Escribe la categorÃ­a\"\r\n                value={inputValue}\r\n                onChange={handleInputChange} />\r\n        </form>\r\n    );\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: propTypes.func.isRequired\r\n}\r\n\r\n\r\n","\r\n\r\nexport const getGifs = async (categoria) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(categoria) }&limit=20&api_key=a1f3j4qs7YSwzdR7RTR54y1RSZW6JSMv`;\r\n    const respuesta = await fetch(url);\r\n    const { data } = await respuesta.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n\r\n    return gifs;\r\n}\r\n\r\nexport default getGifs;\r\n\r\n","import React from 'react'\r\n\r\nexport const GitGridItem = ({title, url}) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInDown\">\r\n            <img src={url} alt={title}/>\r\n           \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GitGridItem } from './GitGridItem';\r\n\r\n\r\nexport const GitGrid = ({ categoria }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs(categoria);\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{categoria.toUpperCase()}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map((img) =>\r\n                        <GitGridItem\r\n                            key={img.id}\r\n                            {...img} />)\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport getGits from '../helpers/getGits';\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        setTimeout(() => {\r\n\r\n            getGits(categoria)\r\n                .then(imgs => {\r\n\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                });\r\n\r\n        }, 1000);\r\n\r\n\r\n    }, [categoria]);\r\n\r\n    return state;\r\n};\r\n\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './AddCategory';\r\nimport { GitGrid } from './GitGrid';\r\n\r\n\r\nconst GitExpertApp = () => {\r\n\r\n    const [categorias, setCategorias] = useState(['perros']);\r\n\r\n    return (\r\n        <>\r\n            <h2>[ GitExpertApp ]</h2>\r\n            <AddCategory categorias={categorias} setCategorias={setCategorias} />\r\n            <hr />            \r\n                {\r\n                    categorias.map(categoria => (\r\n                        <GitGrid \r\n                        key={categoria}\r\n                        categoria={categoria} />\r\n                    ))\r\n                }\r\n            \r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default GitExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GitExpertApp from './componentes/GitExpertApp';\n\n\nReactDOM.render(\n  <>\n    <GitExpertApp />\n  </>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}